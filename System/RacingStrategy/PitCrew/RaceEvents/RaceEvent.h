//
// Created by Marco on 31/10/2020.
//

#ifndef SYSTEM_RACEEVENT_H
#define SYSTEM_RACEEVENT_H
#include <iostream>
#include <string>
#include "../PitCrew.h"

/**
 * The RaceEvent abstract class acts as an interface for the concrete events. Events will be generated by the
 * race track object and the PitCrew will be notified of the generated events. RaceEvent acts as the State
 * participant in the RaceEvent state pattern. The child classes are the Concrete States.
 */
class PitCrew;

class RaceEvent {
public:
    RaceEvent();
    virtual ~RaceEvent();
    virtual std::string eventDescription() = 0;///Returns a description of the current event.
    void changeEvent(PitCrew*);///Acts as the handle() function in the State pattern. This notifies the PitCrew of the new event that has changed.
};


#endif //SYSTEM_RACEEVENT_H
